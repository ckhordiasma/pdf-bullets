{"version":3,"sources":["const/const.js","components/Bullets/utils.js","components/Bullets/Bullet.js","components/Bullets/BulletComparator.js","components/Toolbars/utils.js","components/Toolbars/ImportTools.js","components/Toolbars/SaveTools.js","components/Toolbars/Toolbars.js","components/Abbreviation/AbbreviationTable.js","static/abbrs.xlsx","components/Abbreviation/utils.js","components/Abbreviation/AbbreviationViewer.js","components/Toolbars/Thesaurus.js","const/defaults.js","BulletApp.js","serviceWorker.js","index.js"],"names":["STATUS","Forms","all","AF707","fields","likelyWidth","AF1206","AF910","AF911","tokenize","sentence","split","renderBulletText","text","getWidth","width","match","console","error","fullWidth","trimEnd","textLines","lines","overflow","textSplit","filter","Boolean","AdobeLineSplitFn","answerIdx","i","length","slice","join","recursedText","warn","recursedResult","avgCharWidth","guessIndex","parseInt","firstGuessWidth","substring","Bullet","widthPx","enableOptim","height","onHighlight","canvasRef","useRef","useState","outputTextLines","setOutputTextLines","color","setColor","loading","setLoading","optimStatus","setOptimStatus","rendering","setBulletRendering","widthPxAdjusted","getTextWidth","txt","canvas","context","getContext","font","textAlign","measureText","useEffect","current","optimResults","evalFcn","largerSpace","optWords","initResults","status","seed","max","prevResults","finalResults","newSpace","finalOptimStatus","worstCaseResults","indexToReplace","Math","floor","abs","str","hash","charCodeAt","hashCode","splice","newResults","optimize","ref","style","visibility","position","top","left","minHeight","display","flexDirection","onMouseUp","map","line","whiteSpace","BulletComparator","editorState","setEditorState","onSelect","abbrReplacer","bulletOutputID","Map","heightMap","setHeightMap","newHeightMap","getCurrentContent","getBlockMap","keys","key","blockDiv","document","querySelector","set","getBoundingClientRect","className","onChange","newEditorState","selectedText","getSelectionInfo","handleKeyCommand","command","newState","RichUtils","stripPastedStyles","id","event","selection","window","getSelection","toString","onKeyDown","e","ctrlKey","keyCode","preventDefault","target","RegExp","range","createRange","selectNode","removeAllRanges","addRange","tabIndex","Array","from","getText","DPI","get","selectionState","anchorKey","getAnchorKey","contentBlock","getBlockForKey","start","getStartOffset","end","getEndOffset","pdfjs","require","pdfjsWorker","getDataFromPDF","file","Promise","resolve","getBulletsFromPdf","then","bulletText","pageInfo","bullets","DOMParser","parseFromString","documentElement","textContent","parseFloat","bulletsFromXML","xml","formType","datasetXML","replace","xmlDoc","tagName","innerHTML","infoFromXML","fonts","fontSizes","widths","bulletTag","getAttribute","log","fontSize","filedata","a","arrayBuffer","buffer","uint8Array","Uint8Array","getDocument","data","promise","pdf","getXFA","xfaDict","getMetadata","result","info","Custom","ImportTools","onTextUpdate","onWidthUpdate","onJSONImport","fileInputRef","type","setType","hovering","setHovering","menuState","value","files","res","rej","reader","FileReader","onload","JSON","parse","onerror","readAsText","getDataFromJSON","onClick","click","aria-haspopup","aria-controls","icon","faAngleDown","role","onMouseLeave","href","SaveTools","getSavedSettings","exportRef","saveSettings","settings","storedData","stringify","localStorage","setItem","err","name","alert","dataURI","encodeURIComponent","download","OutputTools","onOptimChange","widthAWD","widthEPR","widthOPR","min","step","InputTools","onTextNorm","Logo","ThesaurusTools","onHide","DocumentTools","props","aria-label","onThesaurusHide","GlobalWorkerOptions","workerSrc","tableSettings","columns","disableVisualSelection","stretchH","autoWrapRow","maxRows","Infinity","manualRowResize","manualColumnResize","rowHeaders","colHeaders","trimWhitespace","enterBeginsEditing","manualRowMove","manualColumnMove","columnSorting","indicator","autoColumnSize","minRows","contextMenu","licenseKey","AbbreviationTable","setData","tableRef","afterChange","payload","source","newData","hotInstance","getData","row","enabled","abbr","getDataFromXLS","workbook","XLSX","read","raw","rows","utils","sheet_to_json","Sheets","SheetNames","header","readAsBinaryString","AbbreviationToolbar","size","lastModified","pickedFile","setPickedFile","data-testid","newFile","undefined","filename","wb","book_new","sht","json_to_sheet","book_append_sheet","writeFile","exportToXLS","confirm","fetch","SampleAbbrFile","response","blob","AbbreviationViewer","handleCardClick","word","This","onSelReplace","SynonymViewer","getSynonyms","phrase","xhttp","XMLHttpRequest","onreadystatechange","readyState","dat","responseText","setState","synonyms","item","open","send","state","hidden","this","prevProps","mainBody","replacedWord","otherAbbrs","abbrDict","onMouseDown","faPlus","explanation","noResults","PureComponent","SynonymList","Synonym","mainAbbrDisp","fontWeight","enabledAbbrDisp","disabledAbbrDisp","enabledAbbrs","fontStyle","disabled","disabledAbbrs","defaultAbbrData","defaultEditorState","EditorState","createWithContent","ContentState","createFromText","BulletApp","setEnableOptim","setWidth","abbrData","setAbbrData","setAbbrDict","setSelection","currentTab","setCurrentTab","showThesaurus","setShowThesaurus","handleJSONImport","settingsArray","isArray","fromJS","getItem","newAbbrDict","forEach","fullWord","String","push","useCallback","finalAbbrDict","Object","abbrs","allApprovedAbbrs","string","regExp","p1","p2","p3","handleThesaurusHide","tabContents","newSel","trim","selectionsToReplace","contentState","block","regex","callback","matchArr","exec","index","findWithRegex","anchorOffset","focusOffset","SelectionState","createEmpty","merge","newContentState","reverse","Modifier","replaceText","newText","getPlainText","toJS","activeElement","trailingSpaces","newEnd","newSelectionState","newContent","newEditorStateSelect","forceSelection","tab","newTab","isLocalhost","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","WebFont","load","custom","families","ReactDOM","render","getElementById","xh","DONE","count","Count","incrementVisitors","URL","process","origin","addEventListener","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3e8d8db9.chunk.js","sourcesContent":["// optimization status codes\n// status codes for optimization direction\nexport const STATUS = {\n  OPTIMIZED: 0,\n  FAILED_OPT: 1,\n  NOT_OPT: -1,\n  MAX_UNDERFLOW: -4,\n};\n\n// could not do a static class property because of MS edge\nexport const Forms = {\n  all: {\n    AF707: {\n      fields: [\n        \"S2DutyTitleDesc\",\n        \"S4Assessment\",\n        \"S5Assessment\",\n        \"S6Assessment\",\n      ],\n      likelyWidth: \"201.041mm\",\n    },\n    AF1206: {\n      fields: [\"specificAccomplishments\", \"p2SpecificAccomplishments\"],\n      likelyWidth: \"202.321mm\",\n    },\n    AF910: {\n      fields: [\n        \"KeyDuties\",\n        \"IIIComments\",\n        \"IVComments\",\n        \"VComments\",\n        \"VIIIComments\",\n        \"IXComments\",\n      ],\n      likelyWidth: \"202.321mm\",\n    },\n    AF911: {\n      fields: [\n        \"KeyDuties\",\n        \"IIIComments\",\n        \"IVComments\",\n        \"VIIComments\",\n        \"VIIIComments\",\n        \"IXComments\",\n      ],\n      likelyWidth: \"202.321mm\",\n    },\n  },\n};\n","import { STATUS } from \"../../const/const\";\n\n/* \nstr: string\nreturn: number\n*/\nexport const hashCode = (str) => {\n  let hash = 0,\n    i,\n    chr;\n  if (str.length === 0) return hash;\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i);\n    hash = (hash << 5) - hash + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n};\n\n    // Regex- split after one of the following: \\u2004 \\u2009 \\u2006 \\s ? / | - % !\n    // but ONLY if immediately followed by: [a-zA-z] [0-9] + \\\nexport const AdobeLineSplitFn = (text)=>{\n  const regex = /([\\u2004\\u2009\\u2006\\s?/|\\-%!])(?=[a-zA-Z0-9+\\\\])/\n  return text.split(regex).filter(Boolean);\n}\n\n/*\nseed: string\nmax: number\nreturn: number\n*/\nexport const getRandomInt = (seed, max) => {\n  return Math.floor(\n    Math.abs((Math.floor(9 * hashCode(seed) + 5) % 100000) / 100000) *\n      Math.floor(max)\n  );\n};\n\nexport const tokenize = (sentence) => {\n  return sentence.split(/[\\s]+/);\n};\n\n/*\nsentence: string\nevalFcn: string to \n        results: {\n            textLines: string,\n            fullWidth: number,\n            lines: number,\n            overflow: number,\n        };\nreturn: {\n    status: STATUS\n    rendering: results\n}\n*/\nexport const optimize = (sentence, evalFcn) => {\n  const smallerSpace = \"\\u2006\";\n  const largerSpace = \"\\u2004\";\n\n  //initialization of optimized words array\n  let optWords = tokenize(sentence.trimEnd());\n\n  const initResults = evalFcn(sentence);\n\n  // Sentence is fine, don't need to optimize\n  if (initResults.overflow === 0) {\n    return {\n      status: STATUS.OPTIMIZED,\n      rendering: initResults,\n    };\n  }\n\n  //initial instantiation of previousResults\n  let prevResults = initResults;\n  let finalResults = initResults;\n  const newSpace = initResults.overflow >= 0 ? smallerSpace : largerSpace;\n\n  let finalOptimStatus = STATUS.NOT_OPT;\n\n  // like in the while loop, want to not replace the first space after the dash.\n  const worstCaseResults = evalFcn(\n    optWords[0] + \" \" + optWords.slice(1).join(newSpace)\n  );\n\n  if (\n    (newSpace === smallerSpace && worstCaseResults.overflow > 0) ||\n    (newSpace === largerSpace &&\n      worstCaseResults.overflow < STATUS.MAX_UNDERFLOW)\n  ) {\n    // this means that there is no point in trying to optimize.\n\n    return {\n      status: STATUS.FAILED_OPT,\n      rendering: worstCaseResults,\n    };\n  }\n\n  while (true) {\n    //don't select the first space after the dash- that would be noticeable and look wierd.\n    // also don't select the last word, don't want to add a space after that.\n    let indexToReplace =\n      getRandomInt(optWords.join(\"\"), optWords.length - 1 - 1) + 1;\n\n    //merges two elements together, joined by the space\n    optWords.splice(\n      indexToReplace,\n      2,\n      optWords.slice(indexToReplace, indexToReplace + 2).join(newSpace)\n    );\n\n    //make all other spaces the normal space size\n    let newSentence = optWords.join(\" \");\n\n    //console.log(newSentence.split(' '))\n    let newResults = evalFcn(newSentence);\n\n    if (newSpace === largerSpace && newResults.overflow > 0) {\n      //console.log(\"Note: Can't add more spaces without overflow, reverting to previous\" );\n      finalResults = prevResults;\n      finalOptimStatus = STATUS.OPTIMIZED;\n      break;\n    } else if (newSpace === smallerSpace && newResults.overflow <= 0) {\n      //console.log(\"Removed enough spaces. Terminating.\" );\n      finalResults = newResults;\n      finalOptimStatus = STATUS.OPTIMIZED;\n      break;\n    } else if (optWords.length <= 2) {\n      // no more optimization could be done.\n      finalResults = newResults;\n      if (\n        newSpace === largerSpace &&\n        finalResults.overflow > STATUS.MAX_UNDERFLOW\n      ) {\n        finalOptimStatus = STATUS.OPTIMIZED;\n      } else {\n        finalOptimStatus = STATUS.FAILED_OPT;\n      }\n      break;\n    }\n\n    prevResults = newResults;\n  }\n\n  /*   console.log({\n    sentence,\n    optWords,\n    initResults,\n    finalResults,\n    worstCaseResults,\n    finalOptimStatus,\n  }); */\n\n  return {\n    status: finalOptimStatus,\n    rendering: finalResults,\n  };\n};\n\n/*\ntext: string\ngetWidth: function: string to number\nwidth: string\nreturn: results: {\n            textLines: string,\n            fullWidth: number,\n            lines: number,\n            overflow: number,\n        };\n*/\n// all widths in this function are in pixels\nexport const renderBulletText = (text, getWidth, width) => {\n  // this function expects a single line of text with no line breaks.\n  if (text.match(\"\\n\")) {\n    console.error(\"renderBulletText expects a single line of text\");\n  }\n\n  const fullWidth = getWidth(text.trimEnd());\n  if (text === \"\") {\n    return {\n      textLines: [],\n      fullWidth: 0,\n      lines: 0,\n      overflow: 0 - width,\n    };\n  }\n  if (fullWidth < width) {\n    return {\n      textLines: [text],\n      fullWidth: fullWidth,\n      lines: 1,\n      overflow: fullWidth - width,\n    };\n  } else {\n    // Scenario where the width of the text is wider than desired.\n    //  In this case, work needs to be done to figure out where the line breaks should be.\n\n    // Regex- split after one of the following: \\u2004 \\u2009 \\u2006 \\s ? / | - % !\n    // but ONLY if immediately followed by: [a-zA-z] [0-9] + \\\n    const textSplit = AdobeLineSplitFn(text); \n\n    // check to make sure the first token is smaller than the desired width.\n    //   This is usually true, unless the desired width is abnormally small, or the\n    //   input text is one really long word\n    if (getWidth(textSplit[0].trimEnd()) < width) {\n      let answerIdx = 0;\n      for (let i = 1; i <= textSplit.length; i++) {\n        const evalText = textSplit.slice(0, i).join(\"\").trimEnd();\n        const evalWidth = getWidth(evalText);\n        if (evalWidth > width) {\n          answerIdx = i - 1;\n          break;\n        }\n      }\n      const recursedText = textSplit\n        .slice(answerIdx, textSplit.length)\n        .join(\"\");\n\n      if (recursedText === text) {\n        console.warn(\"Can't fit \\\"\" + text + '\" on a single line\\n', {\n          text,\n          width,\n          fullWidth,\n        });\n        return {\n          textLines: [text],\n          fullWidth,\n          lines: 1,\n          overflow: fullWidth - width,\n        };\n      } else {\n        const recursedResult = renderBulletText(recursedText, getWidth, width);\n\n        return {\n          textLines: [\n            textSplit.slice(0, answerIdx).join(\"\"),\n            ...recursedResult.textLines,\n          ],\n          fullWidth: fullWidth,\n          lines: 1 + recursedResult.lines,\n          overflow: fullWidth - width,\n        };\n      }\n    } else {\n      // if the first token is wider than the desired width, a line break will need to be inserted somewhere in the token.\n      // Using binary search (I think) to find the correct spot for the line break.\n      const avgCharWidth = fullWidth / text.length;\n      const guessIndex = parseInt(width / avgCharWidth);\n      const firstGuessWidth = getWidth(text.substring(0, guessIndex));\n      let answerIdx = guessIndex;\n      if (firstGuessWidth > width) {\n        for (let i = guessIndex - 1; i > 0; i--) {\n          const nextGuessWidth = getWidth(text.substring(0, i));\n          if (nextGuessWidth < width) {\n            answerIdx = i;\n            break;\n          }\n        }\n      } else if (firstGuessWidth < width) {\n        for (let i = guessIndex; i <= text.length; i++) {\n          const nextGuessWidth = getWidth(text.substring(0, i));\n          if (nextGuessWidth > width) {\n            answerIdx = i - 1;\n            break;\n          }\n        }\n      }\n      const recursedText = text.substring(answerIdx, text.length);\n      if (recursedText === text) {\n        console.warn(\"Can't fit \\\"\" + text + '\" on a single line\\n', {\n          text,\n          width,\n          fullWidth,\n        });\n        return {\n          textLines: [text],\n          fullWidth,\n          lines: 1,\n          overflow: fullWidth - width,\n        };\n      } else {\n        const recursedResult = renderBulletText(recursedText, getWidth, width);\n\n        return {\n          textLines: [\n            text.substring(0, answerIdx),\n            ...recursedResult.textLines,\n          ],\n          fullWidth: fullWidth,\n          lines: 1 + recursedResult.lines,\n          overflow: fullWidth - width,\n        };\n      }\n    }\n  }\n};\n","import { useRef, useState, useEffect } from \"react\";\nimport { optimize, renderBulletText } from \"./utils\";\nimport { STATUS } from \"../../const/const\";\n\nfunction Bullet({\n  text = \"\",\n  widthPx = 500,\n  enableOptim = false,\n  height,\n  onHighlight,\n}) {\n  const canvasRef = useRef(null);\n  const [outputTextLines, setOutputTextLines] = useState(() => [\" \"]);\n\n  const [color, setColor] = useState(\"inherit\");\n  const [loading, setLoading] = useState(false);\n  const [optimStatus, setOptimStatus] = useState(STATUS.NOT_OPT);\n  const [rendering, setBulletRendering] = useState({ textLines: [\"\"] });\n  const widthPxAdjusted = widthPx + 0.55;\n\n  function getTextWidth(txt, canvas) {\n    const context = canvas.getContext(\"2d\");\n    context.font = \"12pt Times New Roman\";\n    context.textAlign = \"left\";\n    return context.measureText(txt).width;\n  }\n\n  // This effect updates the text rendering (i.e. enforces width constraints by inserting newlines)\n  //   whenever the props text input is updated.\n  useEffect(() => {\n    setBulletRendering(\n      renderBulletText(\n        text,\n        (txt) => getTextWidth(txt, canvasRef.current),\n        widthPxAdjusted\n      )\n    );\n  }, [text, widthPxAdjusted, enableOptim]);\n  // [] indicates that this happens once after the component mounts.\n  // [text] indicates that this happens every time the text changes from the user (from props)\n\n  // This effect happens after bullet rendering changes. It evaluates the rendered bullet and\n  //  sees how it can be improved with modified spaces.\n  useEffect(() => {\n    setLoading(true);\n    setOutputTextLines(rendering.textLines);\n    if (enableOptim) {\n      const optimizer = (txt) =>\n        renderBulletText(\n          txt,\n          (txt) => getTextWidth(txt, canvasRef.current),\n          widthPxAdjusted\n        );\n      const optimResults = optimize(text, optimizer);\n      setLoading(false);\n      setOptimStatus(optimResults.status);\n      setOutputTextLines(optimResults.rendering.textLines);\n    } else {\n      if (rendering.overflow < STATUS.MAX_UNDERFLOW || rendering.overflow > 0) {\n        setOptimStatus(STATUS.FAILED_OPT);\n      } else {\n        setOptimStatus(STATUS.OPTIMIZED);\n      }\n      setOutputTextLines(rendering.textLines);\n      setLoading(false);\n    }\n  }, [rendering, enableOptim, text, widthPxAdjusted]);\n\n  //color effect\n  useEffect(() => {\n    if (loading) {\n      setColor(\"silver\");\n    } else if (optimStatus === STATUS.FAILED_OPT) {\n      setColor(\"red\");\n    } else {\n      setColor(\"black\");\n    }\n  }, [loading, outputTextLines, optimStatus]);\n\n  // the style properties help lock the canvas in the same spot and make it essentially invisible.\n  //whitespace: pre-wrap is essential as it allows javascript string line breaks to appear properly.\n  return (\n    <>\n      <canvas\n        ref={canvasRef}\n        style={{\n          visibility: \"hidden\",\n          position: \"absolute\",\n          top: \"-1000px\",\n          left: \"-1000px\",\n        }}\n      />\n      <div\n        style={{\n          minHeight: height,\n          color: color,\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n        onMouseUp={onHighlight}\n      >\n        {outputTextLines.map((line) => {\n          return (\n            <span key={line} style={{ whiteSpace: \"pre\" }}>\n              {line}\n            </span>\n          );\n        })}\n      </div>\n    </>\n  );\n  //return canvas;\n}\n\nexport default Bullet;\n","import { useState, useEffect } from \"react\";\nimport { Editor, RichUtils } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport Bullet from \"./Bullet\";\n\nconst DPI = 96;\nconst MM_PER_IN = 25.4;\nconst DPMM = DPI / MM_PER_IN;\n\nexport default function BulletComparator({\n  editorState,\n  setEditorState,\n  width,\n  onSelect,\n  abbrReplacer,\n  enableOptim,\n}) {\n  const bulletOutputID = \"bulletOutput\";\n  const [heightMap, setHeightMap] = useState(new Map());\n  // Editor callback that adds rich text editor keybinds\n  const handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      setEditorState(newState);\n      return \"handled\";\n    }\n    return \"not-handled\";\n  };\n\n  // Editor callback that runs whenever edits or selection changes occur.\n  const onChange = (newEditorState) => {\n    //const content = editorState.getCurrentContent();\n    // ordered map has a key and a block associasted with it\n    //const blockMap = content.getBlockMap();\n    /*\n        for(let [key,block] of blockMap){\n            console.log(block.getText());\n        }\n        */\n    const { selectedText } = getSelectionInfo(newEditorState);\n    if (onSelect && selectedText !== \"\") onSelect(selectedText);\n\n    setEditorState(newEditorState);\n  };\n\n  // This other bullet selection is for when things are selected on the optimized output\n  const onBulletSelect = (event) => {\n    const selection = window.getSelection().toString();\n    if (selection !== \"\") {\n      onSelect(selection);\n    }\n  };\n\n  // control-a selectability on bullet outputs\n  function selectOutput(e) {\n    if (e.ctrlKey && e.keyCode === 65) {\n      e.preventDefault();\n      //console.log('control-a')\n      //console.log(this.outputRef.current)\n      if (e.target.id.match(new RegExp(bulletOutputID))) {\n        const range = document.createRange();\n        range.selectNode(e.target);\n        window.getSelection().removeAllRanges();\n        window.getSelection().addRange(range);\n      }\n    }\n  }\n\n  useEffect(() => {\n    let newHeightMap = new Map();\n    for (let key of editorState.getCurrentContent().getBlockMap().keys()) {\n      const blockDiv = document.querySelector(\n        `div[data-offset-key=\"${key}-0-0\"]`\n      );\n      if (blockDiv)\n        newHeightMap.set(key, blockDiv.getBoundingClientRect().height);\n    }\n    setHeightMap(newHeightMap);\n  }, [editorState]);\n\n  return (\n    <div className=\"bullets columns is-multiline\">\n      <div\n        className=\"column\"\n        style={\n          {\n            // width: width + 'mm',\n          }\n        }\n      >\n        <h2 className=\"subtitle\">Input Bullets Here:</h2>\n        <div className=\"border\" style={{ width: width + 1 + \"mm\" }}>\n          <Editor\n            editorState={editorState}\n            onChange={onChange}\n            handleKeyCommand={handleKeyCommand}\n            stripPastedStyles={true}\n          />\n        </div>\n      </div>\n      <div className=\"column\">\n        <h2 className=\"subtitle\">View Output Here:</h2>\n        <div\n          className=\"border\"\n          id={bulletOutputID}\n          style={{ width: width + 1 + \"mm\" }}\n          onMouseUp={onBulletSelect}\n          onKeyDown={selectOutput}\n          tabIndex=\"0\"\n        >\n          {Array.from(\n            editorState.getCurrentContent().getBlockMap(),\n            ([key, block]) => {\n              let text = block.getText();\n              if (abbrReplacer) text = abbrReplacer(text);\n\n              return (\n                <Bullet\n                  key={key}\n                  text={text}\n                  widthPx={width * DPMM}\n                  height={heightMap.get(key)}\n                  enableOptim={enableOptim}\n                />\n              );\n            }\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport const getSelectionInfo = (editorState) => {\n  // this block of code gets the selected text from the editor.\n  const selectionState = editorState.getSelection();\n  const anchorKey = selectionState.getAnchorKey();\n  const contentBlock = editorState\n    .getCurrentContent()\n    .getBlockForKey(anchorKey);\n  const start = selectionState.getStartOffset();\n  const end = selectionState.getEndOffset();\n  const selectedText = contentBlock.getText().slice(start, end);\n  return {\n    selectionState,\n    anchorKey,\n    contentBlock,\n    start,\n    end,\n    selectedText,\n  };\n};\n\nexport const findWithRegex = (regex, contentBlock, callback) => {\n  const text = contentBlock.getText();\n  let matchArr, start, end;\n  while ((matchArr = regex.exec(text)) !== null) {\n    start = matchArr.index;\n    end = start + matchArr[0].length;\n    callback(start, end);\n  }\n};\n","import { Forms } from \"../../const/const.js\";\n\nconst pdfjs = require(\"@ckhordiasma/pdfjs-dist\");\nconst pdfjsWorker = require(\"@ckhordiasma/pdfjs-dist/build/pdf.worker.entry\");\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\nexport function getDataFromPDF(file) {\n  return Promise.resolve(getBulletsFromPdf(file)).then(\n    ({ bulletText, pageInfo }) => {\n      // This is needed to convert the bullets HTML into normal text. It fixes things like &amp;\n      const bullets = new DOMParser().parseFromString(bulletText, \"text/html\")\n        .documentElement.textContent;\n\n      return { width: parseFloat(pageInfo.width), bullets };\n    }\n  );\n}\n\nexport function getDataFromJSON(file) {\n  return new Promise((res, rej) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const data = JSON.parse(e.target.result);\n      res(data);\n    };\n    reader.onerror = rej;\n    reader.readAsText(file);\n  });\n}\n\n// Extracting bullets from one of the XML stores in a form pdf.\n// because the data format is XML, Bullets will be HTML-escaped,\n//  with things like &amp;\nexport function bulletsFromXML(xml, formType) {\n  const datasetXML = xml.replace(/&#xD;/g, \"\\n\");\n\n  const parser = new DOMParser();\n  const xmlDoc = parser.parseFromString(datasetXML, \"text/xml\");\n\n  let bulletText = \"\";\n  for (let tagName of Forms.all[formType][\"fields\"]) {\n    const bulletTag = xmlDoc.querySelector(tagName);\n    bulletText += bulletTag.innerHTML + \"\\n\";\n  }\n  return bulletText;\n}\n// Grabs font and page width information from one of the XML stores in a form pdf.\n// It does some rudimentary error checking to make sure that all the relevant fields in the\n//   pdf have the same font size, text fields width, and font face.\nexport function infoFromXML(xml, formType) {\n  const parser = new DOMParser();\n  const xmlDoc = parser.parseFromString(xml, \"text/xml\");\n\n  let fonts = [];\n  let fontSizes = [];\n  let widths = [];\n  let i = 0;\n  for (let tagName of Forms.all[formType][\"fields\"]) {\n    const bulletTag = xmlDoc.querySelector(\"field[name='\" + tagName + \"'\");\n    fonts[i] = bulletTag.querySelector(\"font\").getAttribute(\"typeface\");\n    fontSizes[i] = bulletTag.querySelector(\"font\").getAttribute(\"size\");\n    widths[i] = bulletTag.getAttribute(\"w\");\n    i += 1;\n  }\n  for (let font of fonts) {\n    if (font !== fonts[0]) {\n      console.log(\"warning: not all grabbed sections have the same font type\");\n      break;\n    }\n  }\n  for (let fontSize of fontSizes) {\n    if (fontSize !== fontSizes[0]) {\n      console.log(\"warning: not all grabbed sections have the same font size\");\n      break;\n    }\n  }\n  for (let width of widths) {\n    if (width !== widths[0]) {\n      console.log(\"warning: not all grabbed sections have the same width\");\n      break;\n    }\n  }\n\n  return { font: fonts[0], fontSize: fontSizes[0], width: widths[0] };\n}\n\nexport async function getBulletsFromPdf(filedata) {\n  const pdf = await filedata.arrayBuffer().then((buffer) => {\n    const uint8Array = new Uint8Array(buffer);\n\n    return pdfjs.getDocument({ data: uint8Array }).promise;\n  });\n\n  const xfaDict = await pdf.getXFA();\n\n  const formType = await pdf.getMetadata().then(function (result) {\n    const prefix = result.info.Custom[\"Short Title - Prefix\"];\n    const num = result.info.Custom[\"Short Title - Number\"];\n    return prefix + \"\" + num;\n  });\n\n  const bulletText = bulletsFromXML(xfaDict[\"datasets\"], formType);\n  const pageInfo = infoFromXML(xfaDict[\"template\"], formType);\n\n  //accomplishmentsTag = templateXML.match(/name=\"specificAccomplishments\"(.*?)<\\/field/);\n  //console.log(accomplishmentsTag)\n\n  return { bulletText, pageInfo };\n}\n","import { getDataFromPDF, getDataFromJSON } from \"./utils.js\";\nimport { useState, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\n//PDF import\nexport default function ImportTools({\n  onTextUpdate,\n  onWidthUpdate,\n  onJSONImport,\n}) {\n  const fileInputRef = useRef();\n  const [type, setType] = useState(\"\");\n  const [hovering, setHovering] = useState(false);\n\n  const importFile = (e) => {\n    if (!fileInputRef.current.value) {\n      console.log(\"no file picked\");\n      return;\n    } else {\n      const file = fileInputRef.current.files[0];\n      if (type === \"pdf\") {\n        getDataFromPDF(file).then(({ width, bullets }) => {\n          onWidthUpdate(width);\n          onTextUpdate(bullets);\n        });\n      } else if (type === \"json\") {\n        getDataFromJSON(file).then((data) => onJSONImport(data));\n      }\n\n      fileInputRef.current.value = \"\";\n    }\n  };\n\n  const menuState = hovering ? \"is-active\" : \"\";\n\n  return (\n    <div className={\"dropdown \" + menuState}>\n      <input\n        type=\"file\"\n        onChange={importFile}\n        style={{ display: \"none\" }}\n        ref={fileInputRef}\n      ></input>\n      <div className=\"dropdown-trigger\">\n        <div className=\"buttons has-addons\">\n          <button\n            className=\"button\"\n            onClick={() => {\n              setType(\"pdf\");\n              fileInputRef.current.click();\n            }}\n          >\n            Import\n          </button>\n          <button\n            className=\"button\"\n            onClick={() => setHovering(!hovering)}\n            aria-haspopup=\"true\"\n            aria-controls=\"import-menu\"\n          >\n            <span className=\"icon\">\n              <FontAwesomeIcon icon={faAngleDown} />\n            </span>\n          </button>\n        </div>\n      </div>\n      <div\n        className=\"dropdown-menu\"\n        id=\"import-menu\"\n        role=\"menu\"\n        onMouseLeave={() => setHovering(false)}\n      >\n        <div className=\"dropdown-content\">\n          <a\n            href=\"?#\"\n            className=\"dropdown-item\"\n            onClick={() => {\n              setType(\"pdf\");\n              fileInputRef.current.click();\n            }}\n          >\n            PDF\n          </a>\n          <a\n            href=\"?#\"\n            className=\"dropdown-item\"\n            onClick={() => {\n              setType(\"json\");\n              fileInputRef.current.click();\n            }}\n          >\n            JSON\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\n// saving settings\nexport default function SaveTools({ getSavedSettings }) {\n  const [hovering, setHovering] = useState(false);\n  const exportRef = useRef();\n  const menuState = hovering ? \"is-active\" : \"\";\n  const saveSettings = () => {\n    const settings = getSavedSettings();\n    //JSON stringifying an array for future growth\n    const storedData = JSON.stringify([settings]);\n    try {\n      localStorage.setItem(\"bullet-settings\", storedData);\n      console.log(\n        \"saved settings/data to local storage with character length \" +\n          storedData.length\n      );\n    } catch (err) {\n      if (err.name === \"SecurityError\") {\n        alert(\n          \"Sorry, saving to cookies does not work using the file:// interface and/or your browser's privacy settings\"\n        );\n      } else {\n        throw err;\n      }\n    }\n  };\n  const exportSettings = () => {\n    const settings = getSavedSettings();\n    //JSON stringifying an array for future growth\n    const storedData = JSON.stringify([settings]);\n    const dataURI =\n      \"data:application/JSON;charset=utf-8,\" + encodeURIComponent(storedData);\n    exportRef.current.href = dataURI;\n    exportRef.current.click();\n    console.log(\n      \"exported settings/data to JSON file with character length \" +\n        storedData.length\n    );\n  };\n\n  return (\n    <div className={\"dropdown \" + menuState}>\n      <div className=\"dropdown-trigger\">\n        <div className=\"buttons has-addons\">\n          <button className=\"button\" onClick={saveSettings}>\n            Save{\" \"}\n          </button>\n          <button\n            className=\"button\"\n            aria-haspopup=\"true\"\n            aria-controls=\"save-menu\"\n          >\n            <span className=\"icon\" onClick={() => setHovering(!hovering)}>\n              <FontAwesomeIcon icon={faAngleDown} />\n            </span>\n          </button>\n        </div>\n      </div>\n      <div\n        className=\"dropdown-menu\"\n        id=\"save-menu\"\n        role=\"menu\"\n        onMouseLeave={() => setHovering(false)}\n      >\n        <div className=\"dropdown-content\">\n          <a href=\"?#\" className=\"dropdown-item\" onClick={saveSettings}>\n            Cookie\n          </a>\n          <a href=\"?#\" className=\"dropdown-item\" onClick={exportSettings}>\n            JSON\n          </a>\n        </div>\n      </div>\n\n      <a\n        href=\"?#\"\n        style={{ display: \"none\" }}\n        download=\"settings.json\"\n        ref={exportRef}\n      ></a>\n    </div>\n  );\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\nimport ImportTools from \"./ImportTools\";\nimport SaveTools from \"./SaveTools\";\n// form width, space optimization, select text\nfunction OutputTools({ onOptimChange, enableOptim, onWidthUpdate, width }) {\n  const widthAWD = 202.321;\n  const widthEPR = 202.321;\n  const widthOPR = 201.041;\n  return (\n    <div className=\"field is-grouped\">\n      {/* if I want to group things together in a field, each subelement must have the control class name */}\n      <div className=\"control field has-addons\">\n        <div className=\"control has-icons-right\">\n          <input\n            className=\"input\"\n            id=\"widthInput\"\n            type=\"number\"\n            min=\"100\"\n            max=\"500\"\n            step=\".001\"\n            value={width}\n            onChange={(e) => onWidthUpdate(parseFloat(e.target.value))}\n          ></input>\n          <span className=\"icon is-right\">mm</span>\n        </div>\n        <div className=\"control buttons has-addons\">\n          <a\n            className={\n              \"button is-primary \" + (width === widthAWD ? \"\" : \"is-outlined\")\n            }\n            onClick={() => onWidthUpdate(widthAWD)}\n          >\n            AWD\n          </a>\n          <a\n            className={\n              \"button is-success \" + (width === widthEPR ? \"\" : \"is-outlined\")\n            }\n            onClick={() => onWidthUpdate(widthEPR)}\n          >\n            EPR\n          </a>\n          <a\n            className={\n              \"button is-link \" + (width === widthOPR ? \"\" : \"is-outlined\")\n            }\n            onClick={() => onWidthUpdate(widthOPR)}\n          >\n            OPR\n          </a>\n        </div>\n      </div>\n\n      <a\n        className={\n          \"control button is-dark\" + (enableOptim ? \"\" : \"is-outlined\")\n        }\n        onClick={onOptimChange}\n        id=\"enableOptim\"\n      >\n        Auto-Space\n      </a>\n    </div>\n  );\n}\n// normalize spaces\nfunction InputTools({ onTextNorm }) {\n  return (\n    <button className=\"button\" onClick={onTextNorm}>\n      Renormalize Input Spacing\n    </button>\n  );\n}\n\nfunction Logo() {\n  return (\n    <h1 className=\"title\">\n      <span className=\"logo\">AF </span>\n      <span className=\"logo\">Bull</span>et\n      <span className=\"logo\"> Sh</span>aping &amp;\n      <span className=\"logo\"> i</span>teration\n      <span className=\"logo\"> t</span>ool\n    </h1>\n  );\n}\nfunction ThesaurusTools({ onHide }) {\n  return (\n    <a\n      className=\"button\"\n      onClick={onHide}\n      aria-haspopup=\"true\"\n      aria-controls=\"thesaurus-menu\"\n    >\n      <span>Thesaurus</span>\n      <span className=\"icon\">\n        <FontAwesomeIcon icon={faAngleDown} />\n      </span>\n    </a>\n  );\n}\nfunction DocumentTools(props) {\n  return (\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"navbar-start\">\n        <div className=\"navbar-item\">\n          <SaveTools getSavedSettings={props.getSavedSettings} />\n        </div>\n        <div className=\"navbar-item\">\n          <ImportTools\n            onJSONImport={props.onJSONImport}\n            onTextUpdate={props.onTextUpdate}\n            onWidthUpdate={props.onWidthUpdate}\n          />\n        </div>\n        <div className=\"navbar-item\">\n          <OutputTools\n            enableOptim={props.enableOptim}\n            onOptimChange={props.onOptimChange}\n            width={props.width}\n            onWidthUpdate={props.onWidthUpdate}\n          />\n        </div>\n        <div className=\"navbar-item\">\n          <InputTools onTextNorm={props.onTextNorm} />\n        </div>\n        <div className=\"navbar-item\">\n          <ThesaurusTools onHide={props.onThesaurusHide} />\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport { Logo, DocumentTools };\n","import { useRef } from \"react\";\nimport { HotTable } from \"@handsontable/react\";\nimport \"handsontable/dist/handsontable.full.css\";\n\nconst tableSettings = {\n  columns: [\n    {\n      data: \"enabled\",\n      type: \"checkbox\",\n      disableVisualSelection: true,\n      width: 20,\n    },\n    {\n      data: \"value\",\n      type: \"text\",\n    },\n    {\n      data: \"abbr\",\n      type: \"text\",\n    },\n  ],\n  stretchH: \"all\",\n  width: 500,\n  autoWrapRow: true,\n  height: 500,\n  maxRows: Infinity,\n  manualRowResize: true,\n  manualColumnResize: true,\n  rowHeaders: true,\n  colHeaders: [\"Enabled\", \"Word\", \"Abbreviation\"],\n  trimWhitespace: false,\n  enterBeginsEditing: false,\n  manualRowMove: true,\n  manualColumnMove: true,\n  columnSorting: {\n    indicator: true,\n  },\n  autoColumnSize: false,\n  minRows: 15,\n  contextMenu: true,\n  licenseKey: \"non-commercial-and-evaluation\",\n};\n\nfunction AbbreviationTable({ data, setData }) {\n  const tableRef = useRef(null);\n\n  const update = (payload, source) => {\n    //console.log({source, payload, tableRef: tableRef.current , data})\n    // console.log(\"update source: \", source);\n    if (source !== \"loadData\" && tableRef.current !== null) {\n      const rawData = tableRef.current.hotInstance.getData();\n      const newData = rawData.map((row) => {\n        return {\n          enabled: row[0],\n          value: row[1],\n          abbr: row[2],\n        };\n      });\n\n      setData(newData);\n    }\n  };\n\n  return (\n    <HotTable\n      {...tableSettings}\n      data={data}\n      ref={tableRef}\n      afterChange={update}\n    />\n  );\n}\n\nexport default AbbreviationTable;\n","export default __webpack_public_path__ + \"static/media/abbrs.ebd0e99b.xlsx\";","import XLSX from \"xlsx\";\nimport SampleAbbrFile from \"../../static/abbrs.xlsx\";\n\nexport const getDataFromXLS = (file) => {\n  return new Promise((res) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const data = e.target.result;\n      const workbook = XLSX.read(data, {\n        type: \"binary\",\n        raw: true,\n      });\n      const rows = XLSX.utils\n        .sheet_to_json(workbook.Sheets[workbook.SheetNames[0]], {\n          header: [\"enabled\", \"value\", \"abbr\"],\n        })\n        .map(({ enabled, value, abbr }) => {\n          return { enabled, value, abbr };\n        });\n\n      // checks first row, enabled value and see if it matches header text\n      // normally enabled is a boolean.\n      if (rows[0].enabled.toString().match(/enabled/i)) {\n        res(rows.slice(1));\n      } else {\n        res(rows);\n      }\n    };\n    reader.readAsBinaryString(file);\n  });\n};\n\nexport const exportToXLS = (data, filename) => {\n  const wb = XLSX.utils.book_new();\n  const sht = XLSX.utils.json_to_sheet(data);\n  XLSX.utils.book_append_sheet(wb, sht, \"abbrs\");\n  XLSX.writeFile(wb, filename);\n};\n\nexport const importSampleAbbrs = () => {\n  return fetch(SampleAbbrFile).then((response) => response.blob()); // This is a PROMISE\n};\n","import { useRef, useState, useEffect } from \"react\";\n\nimport AbbreviationTable from \"./AbbreviationTable.js\";\nimport { getDataFromXLS, exportToXLS, importSampleAbbrs } from \"./utils\";\n\nexport function AbbreviationToolbar({ data, setData, ...props }) {\n  const fileInputRef = useRef();\n  const [pickedFile, setPickedFile] = useState({\n    name: \"\",\n    size: 0,\n    lastModified: 0,\n  });\n\n  useEffect(() => {\n    if (pickedFile.name !== \"\") {\n      //console.log(\"processing new abbr file\");\n      getDataFromXLS(pickedFile).then((data) => setData(data));\n    }\n  }, [pickedFile]);\n\n  function importAbbrs(e) {\n    const newFile = fileInputRef.current.files[0];\n    if (newFile === undefined) {\n      //console.log(\"No file was picked\");\n      return;\n    } else if (\n      pickedFile.lastModified == newFile.lastModified &&\n      pickedFile.name === newFile.name &&\n      pickedFile.size === newFile.size\n    ) {\n      //console.log(\"same file picked\");\n      return;\n    } else {\n      setPickedFile(newFile);\n    }\n  }\n\n  return (\n    <div className=\"toolbox\">\n      <input\n        type=\"file\"\n        data-testid=\"uploader\"\n        onChange={importAbbrs}\n        ref={fileInputRef}\n        style={{ display: \"none\" }}\n      ></input>\n      <button\n        className=\"button\"\n        onClick={() => {\n          fileInputRef.current.click();\n        }}\n      >\n        Import Abbrs\n      </button>\n      <button\n        className=\"button\"\n        onClick={() => exportToXLS(data, \"abbrs.xlsx\")}\n      >\n        Export Abbrs\n      </button>\n      <button\n        className=\"button\"\n        onClick={() => {\n          if (\n            window.confirm(\n              \"Are you sure you want to remove all existing acronyms and replace with a common list?\"\n            )\n          ) {\n            importSampleAbbrs()\n              .then((file) => getDataFromXLS(file))\n              .then((data) => setData(data));\n          }\n        }}\n      >\n        Load Common Abbrs\n      </button>\n    </div>\n  );\n}\n\nfunction AbbreviationViewer({ data, setData }) {\n  return (\n    <div>\n      <AbbreviationToolbar setData={setData} data={data} />\n      <AbbreviationTable data={data} setData={setData} />\n    </div>\n  );\n}\n\nexport default AbbreviationViewer;\n","import { PureComponent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nconst handleCardClick = (word, This) => {\n  return (e) => {\n    e.preventDefault();\n    This.props.onSelReplace(word);\n  };\n};\n\nclass SynonymViewer extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      synonyms: [],\n      hidden: true,\n    };\n  }\n  getSynonyms = (phrase) => {\n    const xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = () => {\n      if (xhttp.readyState === 4 && xhttp.status === 200) {\n        const dat = JSON.parse(xhttp.responseText);\n\n        if (dat.length !== 0) {\n          this.setState({\n            synonyms: dat.map((item) => {\n              return item.word;\n            }),\n          });\n        } else {\n          this.setState({\n            synonyms: [],\n          });\n        }\n      }\n    };\n    const maxWords = 75;\n    xhttp.open(\n      \"GET\",\n      \"https://api.datamuse.com/words?max=\" + maxWords + \"&ml=\" + phrase,\n      true\n    );\n    xhttp.send();\n  };\n  componentDidMount() {\n    this.getSynonyms(this.props.word);\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.word !== this.props.word) {\n      this.getSynonyms(this.props.word);\n    }\n  }\n\n  render() {\n    const replacedWord = this.props.abbrReplacer(this.props.word);\n    const otherAbbrs = this.props.abbrDict[this.props.word];\n    const header = (\n      <span className=\"tag is-medium\">\n        <Synonym\n          word={this.props.word}\n          key={this.props.word}\n          abbr={replacedWord === this.props.word ? \"\" : replacedWord}\n          otherAbbrs={otherAbbrs}\n        />\n        <a\n          className=\"icon is-small\"\n          onMouseDown={handleCardClick(this.props.word, this)}\n        >\n          <FontAwesomeIcon icon={faPlus} size=\"xs\" color=\"#51cf66\" />\n        </a>\n      </span>\n    );\n\n    const synonyms = (\n      <SynonymList\n        onSelReplace={this.props.onSelReplace}\n        key={this.state.synonyms.join(\"\")}\n        synonyms={this.state.synonyms}\n        abbrDict={this.props.abbrDict}\n        abbrReplacer={this.props.abbrReplacer}\n      />\n    );\n    const explanation = (\n      <span className=\"panel-block\" key=\"init\">\n        Auto-thesaurus box - highlight a word or phrase below to show synonyms\n        in this box\n      </span>\n    );\n    const noResults = (\n      <span className=\"panel-block\" key=\"none\">\n        no results found\n      </span>\n    );\n    let mainBody;\n    if (this.props.word === \"\") {\n      mainBody = explanation;\n    } else if (this.state.synonyms.length === 0) {\n      mainBody = noResults;\n    } else {\n      mainBody = synonyms;\n    }\n\n    return (\n      <div className=\"card\">\n        <header className=\"card-header has-background-light\tis-shadowless\">\n          <div className=\"card-header-title\">\n            <span>Thesaurus{this.props.word ? \":\" : \"\"}</span>\n            {this.props.word ? header : \"\"}\n          </div>\n          <a className=\"card-header-icon\" onClick={this.props.onHide}>\n            <span className=\"delete\"></span>\n          </a>\n        </header>\n        <div\n          className=\"card-content\"\n          style={{ height: \"290px\", overflow: \"auto\" }}\n        >\n          {mainBody}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass SynonymList extends PureComponent {\n\n  render() {\n    return (\n      <div>\n        <div className=\"tags are-medium \">\n          {this.props.synonyms.map((word, i) => {\n            const replacedWord = this.props.abbrReplacer(word);\n            const otherAbbrs = this.props.abbrDict[word];\n            return (\n              <span className=\"tag\" key={i}>\n                <Synonym\n                  word={word}\n                  abbr={replacedWord === word ? \"\" : replacedWord}\n                  otherAbbrs={otherAbbrs}\n                />\n                <a className=\"icon\" onMouseDown={handleCardClick(word, this)}>\n                  <FontAwesomeIcon icon={faPlus} size=\"xs\" color=\"#51cf66\" />\n                </a>\n              </span>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n/**\n * otherAbbrs: {\n *   enabled: [array of abbreviations],\n *   disabled: [array of abbreviations]\n * }\n *\n */\nclass Synonym extends PureComponent {\n  render() {\n    //don't forget! you need to add capability to check on disabled abbreviations\n    let mainAbbrDisp = \"\";\n    if (this.props.abbr) {\n      mainAbbrDisp = (\n        <span style={{ fontWeight: \"bold\" }}>\n          {\" (\" + this.props.abbr + \")\"}\n        </span>\n      );\n    }\n\n    let enabledAbbrDisp = \"\";\n    let disabledAbbrDisp = \"\";\n\n    if (this.props.otherAbbrs) {\n      if (this.props.otherAbbrs.enabled) {\n        let enabledAbbrs = this.props.otherAbbrs.enabled.filter((abbr) => {\n          return abbr !== this.props.abbr;\n        });\n        if (enabledAbbrs.length > 0) {\n          enabledAbbrDisp = (\n            <span style={{ fontStyle: \"italic\" }}>\n              {\" (\" + enabledAbbrs.join(\",\") + \")\"}\n            </span>\n          );\n        }\n      }\n\n      if (this.props.otherAbbrs.disabled) {\n        let disabledAbbrs = this.props.otherAbbrs.disabled;\n        if (disabledAbbrs.length > 0) {\n          disabledAbbrDisp = (\n            <span style={{ fontStyle: \"italic\" }}>\n              {\" (\" + disabledAbbrs.join(\",\") + \")\"}\n            </span>\n          );\n        }\n      }\n    }\n    return (\n      <span>\n        <span>{this.props.word}</span>\n        {mainAbbrDisp}\n        {enabledAbbrDisp}\n        {disabledAbbrDisp}\n      </span>\n    );\n  }\n}\nexport default SynonymViewer;\nexport { Synonym, SynonymList };\n","export const defaultText =\n  \"- This is a custom built bullet writing tool; abbreviations will be replaced according to table in the abbreviations tab--you will see output on the right\\n\\\n- This tool can optimize spacing; output will be red if the optimizer could not fix spacing with 2004 or 2006 Unicode spaces\\n\\\n- Click the thesaurus button to show one; select a word in this or the output box to view synonyms--words in parentheses are abbreviations that are configured\";\n\nexport const defaultWidth = 202.321;\nexport const defaultAbbrData = [\n  {\n    enabled: true,\n    value: \"abbreviations\",\n    abbr: \"abbrs\",\n  },\n  {\n    enabled: true,\n    value: \"table\",\n    abbr: \"tbl\",\n  },\n  {\n    enabled: true,\n    value: \"optimize\",\n    abbr: \"optim\",\n  },\n  {\n    enabled: true,\n    value: \"with \",\n    abbr: \"w/\",\n  },\n  {\n    enabled: true,\n    value: \"parentheses\",\n    abbr: \"parens\",\n  },\n];\n","import { useState, useEffect, useCallback } from \"react\";\nimport BulletComparator, {\n  getSelectionInfo,\n  findWithRegex,\n} from \"./components/Bullets/BulletComparator\";\nimport { Logo, DocumentTools } from \"./components/Toolbars/Toolbars\";\nimport { tokenize } from \"./components/Bullets/utils\";\nimport AbbreviationViewer from \"./components/Abbreviation/AbbreviationViewer\";\nimport SynonymViewer from \"./components/Toolbars/Thesaurus.js\";\nimport { EditorState, ContentState, Modifier, SelectionState } from \"draft-js\";\nimport { defaultAbbrData, defaultText, defaultWidth } from \"./const/defaults\";\n\nconst defaultEditorState = EditorState.createWithContent(\n  ContentState.createFromText(defaultText)\n);\n\n// Note that all width measurements in this file are in millimeters.\nfunction BulletApp() {\n  const [enableOptim, setEnableOptim] = useState(true);\n  const [width, setWidth] = useState(defaultWidth);\n  const [abbrData, setAbbrData] = useState(defaultAbbrData);\n\n  const [abbrDict, setAbbrDict] = useState({});\n\n  const [selection, setSelection] = useState(\"\");\n  const [currentTab, setCurrentTab] = useState(0);\n  const [showThesaurus, setShowThesaurus] = useState(false);\n  const [editorState, setEditorState] = useState(defaultEditorState);\n\n  function handleJSONImport(settingsArray) {\n    const settings = settingsArray[0]; //preparing for possible eventual several tabs of stuff\n    setEnableOptim(settings.enableOptim ?? enableOptim);\n\n    // for backwards compatibility\n    setWidth(parseFloat(settings.width ?? width));\n\n    // for backwards compatibility\n    if (Array.isArray(settings.abbrData[0])) {\n      setAbbrData(\n        settings.abbrData.map((row) => {\n          return {\n            enabled: row[0],\n            value: row[1],\n            abbr: row[2],\n          };\n        })\n      );\n    } else {\n      setAbbrData(settings.abbrData ?? abbrData);\n    }\n\n    setEditorState(\n      settings.editorState\n        ? EditorState.fromJS(settings.editorState)\n        : EditorState.createWithContent(\n            ContentState.createFromText(settings.text)\n          )\n    );\n  }\n\n  useEffect(() => {\n    let settingsArray;\n    try {\n      if (localStorage.getItem(\"bullet-settings\")) {\n        settingsArray = JSON.parse(localStorage.getItem(\"bullet-settings\"));\n        handleJSONImport(settingsArray);\n      }\n    } catch (err) {\n      if (err.name === \"SecurityError\") {\n        console.log(\n          \"Was not able to get localstorage bullets due to use of file interface and browser privacy settings\"\n        );\n      } else {\n        throw err;\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const newAbbrDict = {};\n\n    abbrData\n      .filter((row) => row.value !== null && row.abbr !== null)\n      .forEach((row) => {\n        //console.log(row);\n        let fullWord = String(row.value).replace(/\\s/g, \" \");\n        let abbr = row.abbr;\n        let enabled = row.enabled;\n        newAbbrDict[fullWord] = newAbbrDict[fullWord] || []; //initializes to empty array if necessary\n\n        if (enabled) {\n          newAbbrDict[fullWord].enabled = newAbbrDict[fullWord].enabled || [];\n          newAbbrDict[fullWord].enabled.push(abbr);\n        } else {\n          newAbbrDict[fullWord].disabled = newAbbrDict[fullWord].disabled || [];\n          newAbbrDict[fullWord].disabled.push(abbr);\n        }\n      });\n\n    setAbbrDict(newAbbrDict);\n  }, [abbrData]);\n\n  const abbrReplacer = useCallback(\n    (sentence) => {\n      const finalAbbrDict = {};\n      //console.log(abbrDict);\n      Object.keys(abbrDict).forEach((word) => {\n        const abbrs = abbrDict[word]; //an array\n        //if there is at least one enabled abbreviation, take the lowest most element of it.\n        if (abbrs.enabled) {\n          finalAbbrDict[word] = abbrs.enabled[abbrs.enabled.length - 1];\n        }\n      });\n\n      // courtesy of https://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\n      function escapeRegExp(string) {\n        return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\n      }\n\n      let modifiers = \"g\";\n      const allApprovedAbbrs = Object.keys(finalAbbrDict)\n        .map(escapeRegExp)\n        .join(\"|\");\n\n      // some info on the boundary parts of the regex:\n      // (^|\\\\W|\\\\b)\n      //     ^ - ensures words at the beginning of line are considered for abbreviation\n      //     \\\\W - expects abbr to be preceded by a non-word, i.e. a space, semicolon, dash, etc.\n      //     \\\\b - also check for word boundaries, this is necessary for edge cases like 'f/ ' and 'w/ '.\n      //            Otherwise things like 'with chicken' and 'for $2M' won't resolve to 'w/chicken' and 'f/$2M'.\n      // (\\\\W|\\\\b|$)\n      //     \\\\W, \\\\b - see above\n      //     $ - ensures words at end of line are considered for abbreviation\n      const regExp = new RegExp(\n        \"(^|\\\\W|\\\\b)(\" + allApprovedAbbrs + \")(\\\\W|\\\\b|$)\",\n        modifiers\n      );\n      const newSentence = sentence.replace(regExp, (match, p1, p2, p3) => {\n        //p2 = p2.replace(/ /g,'\\\\s')\n        let abbr = finalAbbrDict[p2];\n        if (!abbr) {\n          abbr = \"\";\n        }\n        return p1 + abbr + p3;\n      });\n      return newSentence;\n    },\n    [abbrDict]\n  );\n\n  function handleOptimChange() {\n    setEnableOptim(!enableOptim);\n  }\n  function handleSelect(newSel) {\n    const maxWords = 8;\n    if (newSel.trim() !== \"\") {\n      setSelection(tokenize(newSel.trim()).slice(0, maxWords).join(\" \"));\n    }\n  }\n\n  function handleTextNorm() {\n    const selectionsToReplace = [];\n    const contentState = editorState.getCurrentContent();\n    contentState.getBlockMap().forEach((block, key) => {\n      findWithRegex(/\\s+/g, block, (anchorOffset, focusOffset) => {\n        const selection = SelectionState.createEmpty(key).merge({\n          anchorOffset,\n          focusOffset,\n        });\n        selectionsToReplace.push(selection);\n      });\n    });\n\n    let newContentState = contentState;\n    // need to reverse the selections list, because otherwise as the newContentState is iteratively changed,\n    //  subsequent selections will get shifted and get all jacked up. This problem can be avoided by going backwards.\n    selectionsToReplace.reverse().forEach((selection) => {\n      newContentState = Modifier.replaceText(newContentState, selection, \" \");\n    });\n\n    setEditorState(EditorState.createWithContent(newContentState));\n  }\n  function handleTextUpdate(newText) {\n    setEditorState(\n      EditorState.createWithContent(ContentState.createFromText(newText))\n    );\n  }\n\n  function handleSave() {\n    return {\n      width: width,\n      text: editorState.getCurrentContent().getPlainText(\"\\n\"),\n      editorState: editorState.toJS(),\n      abbrData: abbrData,\n      enableOptim: enableOptim,\n    };\n  }\n  function handleTabChange(newTab) {\n    return () => setCurrentTab(newTab);\n  }\n  function handleThesaurusHide() {\n    setShowThesaurus(!showThesaurus);\n  }\n  function handleSelReplace(word) {\n    if (document.activeElement.className.match(/public-DraftEditor-content/)) {\n      const {\n        selectedText,\n        start,\n        anchorKey,\n        selectionState,\n      } = getSelectionInfo(editorState);\n\n      const trailingSpaces = selectedText.match(/\\s*$/)[0];\n      const newEnd = start + word.length + trailingSpaces.length;\n\n      const newSelectionState = SelectionState.createEmpty(anchorKey).merge({\n        anchorOffset: start,\n        focusOffset: newEnd,\n      });\n\n      const newContent = Modifier.replaceText(\n        editorState.getCurrentContent(),\n        selectionState,\n        word + trailingSpaces\n      );\n      const newEditorState = EditorState.push(\n        editorState,\n        newContent,\n        \"insert-characters\"\n      );\n      const newEditorStateSelect = EditorState.forceSelection(\n        newEditorState,\n        newSelectionState\n      );\n\n      setEditorState(newEditorStateSelect);\n    }\n  }\n\n  const tabs = [\"Bullets\", \"Abbreviations\"];\n  const tabContents = [\n    <BulletComparator\n      editorState={editorState}\n      setEditorState={setEditorState}\n      abbrReplacer={abbrReplacer}\n      width={width}\n      onSelect={handleSelect}\n      enableOptim={enableOptim}\n    />,\n    <AbbreviationViewer data={abbrData} setData={setAbbrData} />,\n  ];\n\n  return (\n    <div className=\"container is-fluid\">\n      <div className=\"columns is-multiline\">\n        <div className=\"column is-full\">\n          <Logo />\n          <DocumentTools\n            enableOptim={enableOptim}\n            onOptimChange={handleOptimChange}\n            width={width}\n            onWidthUpdate={setWidth}\n            onTextNorm={handleTextNorm}\n            onTextUpdate={handleTextUpdate}\n            getSavedSettings={handleSave}\n            onJSONImport={handleJSONImport}\n            onThesaurusHide={handleThesaurusHide}\n          />\n        </div>\n\n        <div className={\"column is-full \" + (showThesaurus ? \"\" : \"is-hidden\")}>\n          <SynonymViewer\n            word={selection}\n            onSelReplace={handleSelReplace}\n            abbrDict={abbrDict}\n            abbrReplacer={abbrReplacer}\n            onHide={handleThesaurusHide}\n          />\n        </div>\n        <div className=\"column is-full\">\n          <div className=\"tabs\">\n            <ul>\n              {tabs.map((tab, i) => {\n                return (\n                  <li key={i} className={currentTab === i ? \"is-active\" : \"\"}>\n                    <a onClick={handleTabChange(i)}>{tab}</a>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n        <div className=\"column is-full\">{tabContents[currentTab]}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default BulletApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n//import {Bullet, BulletComparator, Skeleton} from \"./components/bullets.js\"\nimport BulletApp from \"./BulletApp.js\";\n\nimport \"./styles/index.scss\";\nimport \"handsontable/dist/handsontable.full.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport WebFont from \"webfontloader\";\n\nWebFont.load({\n  custom: {\n    families: [\"AdobeTimes\"],\n  },\n});\n\nReactDOM.render(\n  <>\n    <div className=\"section\" id=\"stuff\">\n      <BulletApp />\n    </div>\n    <div className=\"container\" id=\"footer\">\n      <div>\n        If you have feedback, submit an{\" \"}\n        <a href=\"https://github.com/AF-VCD/pdf-bullets/issues\">issue</a>\n        or a{\" \"}\n        <a href=\"https://github.com/AF-VCD/pdf-bullets/pulls\">pull request</a>\n      </div>\n      <div>\n        This site utilizes PDF.JS (pdf import), react-table (spreadsheet),\n        draft-js (editor), the DataMuse API (thesaurus), and Bulma (CSS).\n      </div>\n      <div>\n        This site has basic analytics to track the total number of visits to the\n        page. See{\" \"}\n        <a href=\"https://github.com/ckhordiasma/log-bullet-visitors\">here</a>{\" \"}\n        for details\n      </div>\n      <div>Maintained by Christopher Kodama </div>\n    </div>\n  </>,\n  document.getElementById(\"root\")\n);\n\nincrementVisitors();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\nfunction incrementVisitors() {\n  // code for incrementing visitor count\n  const xh = new XMLHttpRequest();\n  xh.onreadystatechange = () => {\n    if (xh.readyState === XMLHttpRequest.DONE) {\n      var status = xh.status;\n\n      // Not sure what status codes are acceptable.. using MDN successful responses and redirects range as a guide\n      if (status >= 200 && status < 400) {\n        // The request has been completed successfully\n        const count = JSON.parse(xh.response).Count;\n        console.log(\n          \"The bullets site(s) have been visited \" +\n            count +\n            \" times in the last 7 days.\"\n        );\n      } else {\n        console.log(\"Visitor count increment: task failed successfully\");\n      }\n    }\n  };\n  xh.open(\n    \"POST\",\n    \"https://g5z50elklh.execute-api.us-east-2.amazonaws.com/default/LogVisitors\",\n    true\n  );\n  xh.send();\n}\n"],"sourceRoot":""}